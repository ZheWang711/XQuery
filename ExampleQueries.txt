XPath Expression #1
doc("j_caesar.xml")//(ACT,PERSONAE)/TITLE
XPath Expression #2
doc("j_caesar.xml")//ACT[./TITLE]/*/SPEECH/../TITLE
XPath Expression #3
doc("j_caesar.xml")//ACT[./TITLE]/*/SPEECH/../*/.././TITLE
XPath Expression #4
doc("j_caesar.xml")//ACT[(./TITLE)==(./TITLE)]/*/SPEECH/../TITLE
XPath Expression #5
doc("j_caesar.xml")//ACT[not(./TITLE)==(./TITLE)]/*/SPEECH/../TITLE


<result>{
          for $a in doc("j_caesar.xml")//ACT,
              $sc in $a//SCENE,
              $sp in $sc/SPEECH
          where $sp/LINE/text() = "Et tu, Brute! Then fall, Caesar."
          return <who>{$sp/SPEAKER/text()}</who>,
                 <when>{<act>{$a/TITLE/text()}</act>,
                       <scene>{$sc/TITLE/text()}</scene>}
                 </when>
          }</result>

for $s in doc("j_caesar.xml")//SPEAKER
return <speaks>{<who>{$s/text()}</who>,
                for $a in doc("j_caesar.xml")//ACT
                where some $s1 in $a//SPEAKER satisfies $s1 eq $s
                return <when>{$a/TITLE/text()}</when>}
       </speaks>


for $s in doc("j_caesar.xml")/PLAY/FM/P,
$t in doc("j_caesar.xml")/PLAY/TITLE
return <title>{$s/text(), <lalala>{$t/text()}</lalala>}
      </title>


for $s in doc("j_caesar.xml")/PLAY/FM/P
return <speaks>{$s/text()}
      </speaks>
